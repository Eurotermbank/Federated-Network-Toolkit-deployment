apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-ingress-keycloak
  namespace: otk
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - hosts:
    - auth.example.com
    secretName: aks-ingress-tls
  rules:
    - host: auth.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 2014
status:
  loadBalancer: {}
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: http-ingress-strapi
  namespace: otk
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - hosts:
    - strapi.example.com
    secretName: aks-ingress-tls
  rules:
    - host: strapi.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-cms
                port:
                  number: 2001
status:
  loadBalancer: {}
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/auth-type: basic
    #nginx.ingress.kubernetes.io/auth-secret: kibana-basic-auth
    #nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - Logs and Statistics"
  name: http-ingress-kibana
  namespace: otk
spec:
  tls:
  - hosts:
    - kibana.example.com
    secretName: aks-ingress-tls
  rules:
    - host: kibana.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kibana
                port:
                  number: 5601
status:
  loadBalancer: {}
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/default-backend: frontend
    nginx.ingress.kubernetes.io/proxy-body-size: 12m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: http-ingress
  namespace: otk
spec:
  tls:
  - hosts:
    - otk.example.com
    secretName: aks-ingress-tls
  rules:
    - host: otk.example.com
      http:
        paths:
          - path: /((.*))
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 2000
          - path: /api/termservice(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: termservice
                port:
                  number: 2021
          - path: /api/discussionservice(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: discussionservice
                port:
                  number: 2080
status:
  loadBalancer: {}
